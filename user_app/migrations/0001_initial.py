# Generated by Django 5.0.9 on 2025-08-26 09:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("processor", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="IWOPDFFiles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("pdf_url", models.URLField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "iwo_pdf_files",
            },
        ),
        migrations.CreateModel(
            name="EmployerProfile",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("username", models.CharField(max_length=100, unique=True)),
                ("employer_name", models.CharField(default="ABS", max_length=100)),
                (
                    "federal_employer_identification_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "street_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                ("state", models.CharField(blank=True, max_length=255, null=True)),
                ("country", models.CharField(blank=True, max_length=255, null=True)),
                ("zipcode", models.CharField(blank=True, max_length=10, null=True)),
                ("number_of_employees", models.IntegerField(blank=True, null=True)),
                ("department", models.CharField(blank=True, max_length=255, null=True)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "employer_profile",
            },
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("client_id", models.CharField(max_length=50, unique=True)),
                ("legal_name", models.CharField(max_length=255)),
                ("dba", models.CharField(max_length=255)),
                ("industry_type", models.CharField(max_length=100)),
                ("tax_id", models.CharField(max_length=64)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "pay_period",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clients",
                        to="processor.payperiod",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clients",
                        to="processor.state",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmployeeBatchData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ee_id", models.CharField(max_length=255, unique=True)),
                ("case_id", models.CharField(max_length=255, unique=True)),
                ("work_state", models.CharField(max_length=255)),
                (
                    "no_of_exemption_including_self",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("pay_period", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "filing_status",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "age",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("is_blind", models.BooleanField(blank=True, null=True)),
                ("is_spouse_blind", models.BooleanField(blank=True, null=True)),
                (
                    "spouse_age",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "support_second_family",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "no_of_student_default_loan",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "arrears_greater_than_12_weeks",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "no_of_dependent_exemption",
                    models.IntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "employee_batch_data",
                "indexes": [
                    models.Index(
                        fields=["case_id"], name="employee_ba_case_id_37c297_idx"
                    ),
                    models.Index(
                        fields=["ee_id", "case_id"], name="employee_ba_ee_id_723db9_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="EmployeeDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ee_id", models.CharField(max_length=255, unique=True)),
                ("ssn", models.CharField(max_length=64)),
                ("age", models.CharField(max_length=255)),
                ("is_blind", models.BooleanField(blank=True, null=True)),
                ("home_state", models.CharField(max_length=255)),
                ("work_state", models.CharField(max_length=255)),
                ("gender", models.CharField(blank=True, max_length=255, null=True)),
                ("number_of_exemptions", models.IntegerField()),
                ("filing_status", models.CharField(max_length=255)),
                ("marital_status", models.CharField(max_length=255)),
                ("number_of_student_default_loan", models.IntegerField()),
                ("number_of_dependent_child", models.IntegerField()),
                ("support_second_family", models.BooleanField()),
                ("spouse_age", models.IntegerField(blank=True, null=True)),
                ("is_spouse_blind", models.BooleanField(blank=True, null=True)),
                ("record_import", models.DateTimeField(auto_now_add=True)),
                ("record_updated", models.DateTimeField(auto_now_add=True)),
                ("garnishment_fees_status", models.BooleanField()),
                ("garnishment_fees_suspended_till", models.DateField()),
                ("number_of_active_garnishment", models.IntegerField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="employees",
                        to="user_app.client",
                    ),
                ),
            ],
            options={
                "db_table": "employee_detail",
            },
        ),
        migrations.CreateModel(
            name="GarnishmentBatchData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ee_id", models.CharField(max_length=255)),
                ("case_id", models.CharField(max_length=255, unique=True)),
                ("garnishment_type", models.CharField(max_length=255)),
                (
                    "ordered_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "arrear_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "current_medical_support",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "past_due_medical_support",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "current_spousal_support",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "past_due_spousal_support",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "employee_case",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="garnishment_data",
                        to="user_app.employeebatchdata",
                        to_field="case_id",
                    ),
                ),
            ],
            options={
                "db_table": "garnishment_batch_data",
            },
        ),
        migrations.CreateModel(
            name="GarnishmentOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("case_id", models.CharField(max_length=255, unique=True)),
                ("is_consumer_debt", models.BooleanField(default=False)),
                ("issued_date", models.DateField(blank=True, null=True)),
                ("received_date", models.DateField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("stop_date", models.DateField(blank=True, null=True)),
                (
                    "ordered_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("arrear_gt_12_weeks", models.BooleanField(default=False)),
                ("fein", models.CharField(max_length=254)),
                ("garnishing_authority", models.CharField(max_length=255)),
                (
                    "withholding_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("arrear_greater_than_12_weeks", models.BooleanField(default=False)),
                (
                    "arrear_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="garnishments",
                        to="user_app.employeedetail",
                    ),
                ),
                (
                    "employer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="garnishments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "garnishment_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="processor.garnishmenttype",
                    ),
                ),
                (
                    "issuing_state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="garnishments",
                        to="processor.state",
                    ),
                ),
                (
                    "work_state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="work_garnishments",
                        to="processor.state",
                    ),
                ),
            ],
            options={
                "db_table": "garnishment_order",
            },
        ),
        migrations.CreateModel(
            name="GarnishmentSuspension",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "effective_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="suspensions",
                        to="user_app.garnishmentorder",
                    ),
                ),
            ],
            options={
                "db_table": "garnishment_suspension",
            },
        ),
        migrations.CreateModel(
            name="IWODetailsPDF",
            fields=[
                ("IWO_ID", models.AutoField(primary_key=True, serialize=False)),
                ("IWO_Status", models.CharField(max_length=250)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="IWODetailsPDF",
                        to="user_app.employeedetail",
                    ),
                ),
            ],
            options={
                "db_table": "iwo_details_pdf",
            },
        ),
        migrations.CreateModel(
            name="Payroll",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("payroll_date", models.DateField()),
                ("pay_date", models.DateField()),
                (
                    "gross_pay",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "net_pay",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "federal_income_tax",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "local_tax",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "medicare_tax",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("social_security", models.CharField(max_length=255)),
                (
                    "deduction_sdi",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "deduction_medical_insurance",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "deduction_401k",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "deduction_union_dues",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "deduction_voluntary",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("type", models.CharField(max_length=255)),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payrolls",
                        to="user_app.employeedetail",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payrolls",
                        to="processor.state",
                    ),
                ),
            ],
            options={
                "db_table": "payroll",
            },
        ),
        migrations.CreateModel(
            name="PayrollBatchData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ee_id", models.CharField(max_length=255, unique=True)),
                ("case_id", models.CharField(max_length=255, unique=True)),
                ("wages", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "commission_and_bonus",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "non_accountable_allowances",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "gross_pay",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "debt",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "exemption_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "net_pay",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "federal_income_tax",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "social_security_tax",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "medicare_tax",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "state_tax",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "local_tax",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "union_dues",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "wilmington_tax",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "medical_insurance_pretax",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "industrial_insurance",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "life_insurance",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "california_sdi",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "employee_case",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payroll_data",
                        to="user_app.employeebatchdata",
                        to_field="case_id",
                    ),
                ),
            ],
            options={
                "db_table": "payroll_taxes_batch_data",
            },
        ),
        migrations.CreateModel(
            name="PEO",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("peo_id", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("contact_person", models.CharField(max_length=255)),
                ("tax_id", models.CharField(max_length=64)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="peos",
                        to="processor.state",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="client",
            name="peo",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="clients",
                to="user_app.peo",
            ),
        ),
        migrations.CreateModel(
            name="SDU",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("country", models.CharField(max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sdus",
                        to="user_app.garnishmentorder",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sdus",
                        to="processor.state",
                    ),
                ),
            ],
            options={
                "db_table": "sdu",
            },
        ),
        migrations.CreateModel(
            name="WithholdingOrderData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.CharField(max_length=250)),
                ("state", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("case_id", models.CharField(max_length=255)),
                ("order_id", models.CharField(max_length=255)),
                ("remittance_id", models.CharField(max_length=255)),
                ("fein", models.CharField(max_length=255)),
                ("employee_name", models.CharField(max_length=255)),
                (
                    "child1_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "child2_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "child3_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "child4_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "child5_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "child6_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("child1_dob", models.CharField(blank=True, max_length=255, null=True)),
                ("child2_dob", models.CharField(blank=True, max_length=255, null=True)),
                ("child3_dob", models.CharField(blank=True, max_length=255, null=True)),
                ("child4_dob", models.CharField(blank=True, max_length=255, null=True)),
                ("child5_dob", models.CharField(blank=True, max_length=255, null=True)),
                ("child6_dob", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "past_due_cash_medical_support_payperiod",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "current_spousal_support_payperiod",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "past_due_spousal_support_payperiod",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "other_order_payperiod",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "total_amount_to_withhold_payperiod",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "current_child_support_payperiod",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "past_due_child_support_payperiod",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "current_cash_medical_support_payperiod",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "current_child_support_amt",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "past_due_cash_medical_support",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "total_amt_to_withhold",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "lump_sum_payment_amt",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "disposable_income_percentage",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "current_spousal_support",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "other_order_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "ordered_amount_per_weekly",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "ordered_amount_per_biweekly",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "ordered_amount_per_monthly",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "ordered_amount_per_semimonthly",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "final_payment_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "past_due_child_support",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "past_due_spousal_support",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "current_cash_medical_support",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "termination_date",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "tribal_payee",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "income_withholding_order",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "arrears_greater_than_12_weeks",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "one_time_order",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "termination_of_iwo",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "amended_iwo",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "never_employed_no_income",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "not_currently_employed",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "child_support_agency",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("court", models.CharField(blank=True, max_length=255, null=True)),
                ("attorney", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "private_individual",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "withholding_order_data",
                "indexes": [
                    models.Index(fields=["id"], name="withholding_id_7e4518_idx")
                ],
            },
        ),
        migrations.AddIndex(
            model_name="employeedetail",
            index=models.Index(fields=["ee_id"], name="employee_de_ee_id_3472c7_idx"),
        ),
        migrations.AddIndex(
            model_name="garnishmentbatchdata",
            index=models.Index(fields=["ee_id"], name="garnishment_ee_id_52a382_idx"),
        ),
        migrations.AddIndex(
            model_name="garnishmentbatchdata",
            index=models.Index(
                fields=["ee_id", "case_id"], name="garnishment_ee_id_7e12c7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="garnishmentorder",
            index=models.Index(
                fields=["case_id"], name="garnishment_case_id_1310e1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="garnishmentsuspension",
            index=models.Index(fields=["order"], name="garnishment_order_i_0f0d57_idx"),
        ),
        migrations.AddIndex(
            model_name="garnishmentsuspension",
            index=models.Index(
                fields=["start_date", "end_date"], name="garnishment_start_d_9f1f70_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payroll",
            index=models.Index(fields=["ee_id"], name="payroll_ee_id_i_7944fa_idx"),
        ),
        migrations.AddIndex(
            model_name="payrollbatchdata",
            index=models.Index(
                fields=["case_id"], name="payroll_tax_case_id_64fd14_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payrollbatchdata",
            index=models.Index(
                fields=["ee_id", "case_id"], name="payroll_tax_ee_id_ae82ff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="sdu",
            index=models.Index(fields=["state_id"], name="sdu_state_i_e1456e_idx"),
        ),
        migrations.AddIndex(
            model_name="sdu",
            index=models.Index(fields=["order"], name="sdu_order_i_c74db7_idx"),
        ),
    ]
