# Generated by Django 5.0.9 on 2025-08-26 09:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("processor", "0001_initial"),
        ("user_app", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="disposableearningstate",
            name="payroll",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DEState",
                to="user_app.payroll",
            ),
        ),
        migrations.AddField(
            model_name="addexemptions",
            name="fs",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="processor.fedfilingstatus",
            ),
        ),
        migrations.AddIndex(
            model_name="garnishmentfeesrules",
            index=models.Index(fields=["rule"], name="garnishment_rule_a3f9c2_idx"),
        ),
        migrations.AddField(
            model_name="garnishmentfees",
            name="rule",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="garnishment_fees",
                to="processor.garnishmentfeesrules",
            ),
        ),
        migrations.AddField(
            model_name="garnishmentfees",
            name="garnishment_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fees",
                to="processor.garnishmenttype",
            ),
        ),
        migrations.AddField(
            model_name="exemptconfig",
            name="garnishment_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="processor.garnishmenttype",
            ),
        ),
        migrations.AddField(
            model_name="addexemptions",
            name="year",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="processor.irspublication1494",
            ),
        ),
        migrations.AddField(
            model_name="garnishmentfees",
            name="pay_period",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fees",
                to="processor.payperiod",
            ),
        ),
        migrations.AddField(
            model_name="exemptconfig",
            name="pay_period",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.payperiod"
            ),
        ),
        migrations.AddField(
            model_name="creditordebtexemptamtconfig",
            name="pay_period",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.payperiod"
            ),
        ),
        migrations.AddField(
            model_name="creditordebtappliedrule",
            name="pay_period",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.payperiod"
            ),
        ),
        migrations.AddField(
            model_name="priorityorders",
            name="garnishment_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="processor.garnishmenttype",
            ),
        ),
        migrations.AddField(
            model_name="priorityorders",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.state"
            ),
        ),
        migrations.AddField(
            model_name="garnishmentfees",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="fees",
                to="processor.state",
            ),
        ),
        migrations.AddField(
            model_name="exemptrule",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.state"
            ),
        ),
        migrations.AddField(
            model_name="exemptconfig",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.state"
            ),
        ),
        migrations.AddField(
            model_name="disposableearningstate",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DEState",
                to="processor.state",
            ),
        ),
        migrations.AddField(
            model_name="creditordebtruleeditpermission",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.state"
            ),
        ),
        migrations.AddField(
            model_name="creditordebtrule",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.state"
            ),
        ),
        migrations.AddField(
            model_name="creditordebtexemptamtconfig",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.state"
            ),
        ),
        migrations.AddField(
            model_name="creditordebtappliedrule",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.state"
            ),
        ),
        migrations.AddField(
            model_name="statetaxlevyappliedrule",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.state"
            ),
        ),
        migrations.AddField(
            model_name="statetaxlevyconfig",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.state"
            ),
        ),
        migrations.AddField(
            model_name="statetaxlevyexemptamtconfig",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.state"
            ),
        ),
        migrations.AddField(
            model_name="statetaxlevyexemptamtconfig",
            name="state_config",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="state_tax_levy_exempt_amounts",
                to="processor.statetaxlevyconfig",
            ),
        ),
        migrations.AddField(
            model_name="statetaxlevyruleeditpermission",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.state"
            ),
        ),
        migrations.AddField(
            model_name="stdexemptions",
            name="fs",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="processor.fedfilingstatus",
            ),
        ),
        migrations.AddField(
            model_name="stdexemptions",
            name="pp",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.payperiod"
            ),
        ),
        migrations.AddField(
            model_name="stdexemptions",
            name="year",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="processor.irspublication1494",
            ),
        ),
        migrations.AddField(
            model_name="thresholdamount",
            name="config",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.exemptconfig"
            ),
        ),
        migrations.AddField(
            model_name="thresholdcondition",
            name="threshold",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="processor.thresholdamount",
            ),
        ),
        migrations.AddField(
            model_name="withholdingrules",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="processor.state"
            ),
        ),
        migrations.AddField(
            model_name="withholdinglimit",
            name="rule",
            field=models.ForeignKey(
                db_column="rule_id",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="withholding_limits",
                to="processor.withholdingrules",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="addexemptions",
            unique_together={("year", "fs", "num_exemptions")},
        ),
        migrations.AddIndex(
            model_name="garnishmentfees",
            index=models.Index(fields=["state"], name="garnishment_state_i_de4fd4_idx"),
        ),
        migrations.AddIndex(
            model_name="garnishmentfees",
            index=models.Index(
                fields=["garnishment_type"], name="garnishment_garnish_fa0ebd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="garnishmentfees",
            index=models.Index(
                fields=["pay_period", "state"], name="garnishment_pay_per_54f80c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="exemptrule",
            index=models.Index(fields=["state"], name="exempt_rule_state_i_fcdbed_idx"),
        ),
        migrations.AddIndex(
            model_name="creditordebtruleeditpermission",
            index=models.Index(fields=["state"], name="creditor_de_state_i_9eee1c_idx"),
        ),
        migrations.AddIndex(
            model_name="creditordebtrule",
            index=models.Index(fields=["state"], name="creditor_de_state_i_7da513_idx"),
        ),
        migrations.AddIndex(
            model_name="creditordebtexemptamtconfig",
            index=models.Index(fields=["state"], name="creditor_de_state_i_69eccd_idx"),
        ),
        migrations.AddIndex(
            model_name="creditordebtexemptamtconfig",
            index=models.Index(
                fields=["pay_period", "state"], name="creditor_de_pay_per_a68743_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="creditordebtappliedrule",
            index=models.Index(fields=["state"], name="creditor_de_state_i_c832d5_idx"),
        ),
        migrations.AddIndex(
            model_name="creditordebtappliedrule",
            index=models.Index(
                fields=["pay_period", "state"], name="creditor_de_pay_per_3aed9e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="statetaxlevyappliedrule",
            index=models.Index(
                fields=["case_id"], name="state_tax_l_case_id_cc0c54_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="statetaxlevyappliedrule",
            index=models.Index(fields=["ee_id"], name="state_tax_l_ee_id_65c524_idx"),
        ),
        migrations.AddIndex(
            model_name="statetaxlevyconfig",
            index=models.Index(fields=["state"], name="state_tax_l_state_i_62f5e5_idx"),
        ),
        migrations.AddIndex(
            model_name="statetaxlevyexemptamtconfig",
            index=models.Index(fields=["state"], name="state_tax_l_state_i_5d13e1_idx"),
        ),
        migrations.AddIndex(
            model_name="statetaxlevyexemptamtconfig",
            index=models.Index(
                fields=["pay_period", "state"], name="state_tax_l_pay_per_53e09d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="statetaxlevyruleeditpermission",
            index=models.Index(fields=["state"], name="state_tax_l_state_i_3f3b8f_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="stdexemptions",
            unique_together={("year", "fs", "pp", "num_exemptions")},
        ),
    ]
