# Generated by Django 5.0.9 on 2025-08-26 09:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AddExemptions",
            fields=[
                ("add_id", models.AutoField(primary_key=True, serialize=False)),
                ("num_exemptions", models.PositiveIntegerField()),
                (
                    "daily",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "weekly",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "biweekly",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "semimonthly",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "monthly",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "add_exemptions",
                "db_table": "add_exemptions",
            },
        ),
        migrations.CreateModel(
            name="CreditorDebtAppliedRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ee_id", models.CharField(blank=True, max_length=255, null=True)),
                ("case_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "withholding_cap",
                    models.CharField(blank=True, max_length=25005, null=True),
                ),
                (
                    "withholding_basis",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "creditor_debt_applied_rule",
                "db_table": "creditor_debt_applied_rule",
            },
        ),
        migrations.CreateModel(
            name="CreditorDebtRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rule", models.CharField(blank=True, max_length=2500, null=True)),
                (
                    "deduction_basis",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "withholding_limit",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "creditor_debt_rule",
                "db_table": "creditor_debt_rule",
            },
        ),
        migrations.CreateModel(
            name="CreditorDebtRuleEditPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "deduction_basis",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "withholding_limit",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "creditor_debt_rule_edit_permission",
                "db_table": "creditor_debt_rule_edit_permission",
            },
        ),
        migrations.CreateModel(
            name="DisposableEarningState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("disposable_earnings", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "de_state_rules",
                "db_table": "de_state_rules",
            },
        ),
        migrations.CreateModel(
            name="ExemptConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_home_state_resident", models.BooleanField(blank=True, null=True)),
                ("debt_type", models.CharField(blank=True, max_length=100, null=True)),
                ("is_filing_status", models.BooleanField(default=False)),
                ("wage_basis", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "wage_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("percent_limit", models.IntegerField(blank=True, null=True)),
                ("start_gt_5dec24", models.BooleanField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "exempt_config",
                "db_table": "exempt_config",
            },
        ),
        migrations.CreateModel(
            name="ExemptRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rule_id", models.IntegerField(db_index=True, unique=True)),
                (
                    "deduction_basis",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "withholding_limit",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("rule", models.CharField(blank=True, max_length=2500, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "exempt_rule",
                "db_table": "exempt_rule",
            },
        ),
        migrations.CreateModel(
            name="FedFilingStatus",
            fields=[
                ("fs_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "default_exempt_amt",
                    models.FloatField(
                        help_text="Default exempt amount for older/blind"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "fed_filing_status",
                "db_table": "fed_filing_status",
            },
        ),
        migrations.CreateModel(
            name="GarnishmentFees",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.CharField(blank=True, max_length=255, null=True)),
                ("status", models.CharField(max_length=255)),
                ("payable_by", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "garnishment_fees",
                "db_table": "garnishment_fees",
            },
        ),
        migrations.CreateModel(
            name="GarnishmentFeesRules",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rule", models.CharField(max_length=255, unique=True)),
                ("maximum_fee_deduction", models.CharField(max_length=255)),
                (
                    "per_pay_period",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                ("per_month", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "per_remittance",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "garnishment_fees_rules",
                "db_table": "garnishment_fees_rules",
            },
        ),
        migrations.CreateModel(
            name="GarnishmentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "garnishment_type",
                "db_table": "garnishment_type",
            },
        ),
        migrations.CreateModel(
            name="IRSPublication1494",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField(blank=True, db_index=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "irs_publication_1494",
                "db_table": "irs_publication_1494",
            },
        ),
        migrations.CreateModel(
            name="PayPeriod",
            fields=[
                (
                    "pp_id",
                    models.AutoField(db_index=True, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(db_index=True, max_length=50, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "payperiod",
                "db_table": "payperiod",
            },
        ),
        migrations.CreateModel(
            name="PriorityOrders",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("priority_order", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "priority_order",
                "db_table": "priority_order",
            },
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("state_code", models.CharField(max_length=100, unique=True)),
                (
                    "state",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "state",
                "db_table": "state",
            },
        ),
        migrations.CreateModel(
            name="StateTaxLevyAppliedRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ee_id", models.CharField(blank=True, max_length=1000, null=True)),
                ("case_id", models.CharField(blank=True, max_length=1000, null=True)),
                ("pay_period", models.CharField(max_length=1000)),
                (
                    "deduction_basis",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "withholding_cap",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "withholding_limit",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "withholding_basis",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "withholding_limit_rule",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "state_tax_levy_applied_rule",
                "db_table": "state_tax_levy_applied_rule",
            },
        ),
        migrations.CreateModel(
            name="StateTaxLevyConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deduction_basis",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "withholding_limit",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "withholding_limit_rule",
                    models.CharField(blank=True, max_length=455, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "state_tax_levy_config",
                "db_table": "state_tax_levy_config",
            },
        ),
        migrations.CreateModel(
            name="StateTaxLevyExemptAmtConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pay_period", models.CharField(max_length=255)),
                ("minimum_hourly_wage_basis", models.CharField(max_length=255)),
                (
                    "minimum_wage_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "multiplier_lt",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "condition_expression_lt",
                    models.CharField(blank=True, max_length=1200, null=True),
                ),
                (
                    "lower_threshold_amount",
                    models.DecimalField(decimal_places=4, max_digits=250),
                ),
                (
                    "multiplier_ut",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "condition_expression_ut",
                    models.CharField(blank=True, max_length=1200, null=True),
                ),
                (
                    "upper_threshold_amount",
                    models.DecimalField(decimal_places=4, max_digits=250),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "state_tax_levy_exempt_amt_config",
                "db_table": "state_tax_levy_exempt_amt_config",
            },
        ),
        migrations.CreateModel(
            name="StateTaxLevyRuleEditPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "deduction_basis",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "withholding_limit",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "state_tax_levy_rule_edit_permission",
                "db_table": "state_tax_levy_rule_edit_permission",
            },
        ),
        migrations.CreateModel(
            name="StdExemptions",
            fields=[
                ("std_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "num_exemptions",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("exempt_amt", models.CharField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "std_exemptions",
                "db_table": "std_exemptions",
            },
        ),
        migrations.CreateModel(
            name="ThresholdAmount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lower_threshold_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "lower_threshold_percent1",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "lower_threshold_percent2",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "mid_threshold_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "mid_threshold_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "upper_threshold_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "upper_threshold_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "de_range_lower_to_upper_threshold_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "de_range_lower_to_mid_threshold_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "de_range_mid_to_upper_threshold_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "exempt_amt",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "filing_status_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "threshold_amount",
                "db_table": "threshold_amount",
            },
        ),
        migrations.CreateModel(
            name="ThresholdCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "multiplier_lt",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "condition_expression_lt",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "multiplier_mid",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "condition_expression_mid",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "multiplier_ut",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "condition_expression_ut",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "threshold_condition",
                "db_table": "threshold_condition",
            },
        ),
        migrations.CreateModel(
            name="WithholdingLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("wl", models.CharField(max_length=10)),
                ("supports_2nd_family", models.BooleanField(blank=True, null=True)),
                (
                    "arrears_of_more_than_12_weeks",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "number_of_orders",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "weekly_de_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "withholding_limit",
                "db_table": "withholding_limit",
            },
        ),
        migrations.CreateModel(
            name="WithholdingRules",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rule", models.IntegerField()),
                ("allocation_method", models.CharField(max_length=255)),
                ("withholding_limit", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "withholding_rules",
                "db_table": "withholding_rules",
            },
        ),
        migrations.CreateModel(
            name="CreditorDebtExemptAmtConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "minimum_hourly_wage_basis",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "minimum_wage_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "multiplier_lt",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "condition_expression_lt",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "lower_threshold_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "lower_threshold_percent1",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "lower_threshold_percent2",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "multiplier_mid",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "condition_expression_mid",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "mid_threshold_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "mid_threshold_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "multiplier_ut",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "condition_expression_ut",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "upper_threshold_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "upper_threshold_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "de_range_lower_to_upper_threshold_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "de_range_lower_to_mid_threshold_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "de_range_mid_to_upper_threshold_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "deducted_basis_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "is_filing_status",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "filing_status_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "exempt_amt",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "state_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="creditor_debt_exempt_amounts",
                        to="processor.creditordebtrule",
                    ),
                ),
            ],
            options={
                "verbose_name": "creditor_debt_exempt_amt_config",
                "db_table": "creditor_debt_exempt_amt_config",
            },
        ),
    ]
